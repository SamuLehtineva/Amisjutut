/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tietokantaharj2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author samu.lehtineva
 */
public class dbjframe extends javax.swing.JFrame {

    /**
     * Creates new form dbjframe
     */
    private Connection conn = null;
    private Statement stmt = null;
    private int result = 0;
    private int tableId = 0;
    
    public dbjframe() {
         try {
         //Registering the HSQLDB JDBC driver
         Class.forName("org.hsqldb.jdbc.JDBCDriver");
         //Creating the connection with HSQLDB
         conn = DriverManager.getConnection("jdbc:hsqldb:hsql://10.60.202.80/testdb", "SA", "");
         stmt = conn.createStatement();
         if (conn!= null){
            result = stmt.executeUpdate("Drop Table tapahtumataulu");
            result = stmt.executeUpdate("CREATE TABLE tapahtumataulu ("
                    + "id INT NOT NULL, tapahtumapvm VARCHAR(20) NOT NULL,"
                    + "selitys VARCHAR(202) NOT NULL,"
                    + "PRIMARY KEY (id));"
                    + "");
            System.out.println("Connection created successfully");
            
         }else{
            System.out.println("Problem with creating connection");
         }
      
      }  catch (Exception e) {
         e.printStackTrace(System.out);
      }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lisaanappi = new javax.swing.JButton();
        poistanappi = new javax.swing.JButton();
        paivitanappi = new javax.swing.JButton();
        tyhjennanappi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tapahtumapäivä");

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Selitys");

        lisaanappi.setText("Lisää");
        lisaanappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaanappiActionPerformed(evt);
            }
        });

        poistanappi.setText("Poista");
        poistanappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poistanappiActionPerformed(evt);
            }
        });

        paivitanappi.setText("Päivitä");
        paivitanappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paivitanappiActionPerformed(evt);
            }
        });

        tyhjennanappi.setText("Tyhjennä");
        tyhjennanappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tyhjennanappiActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "tapahtumapäivä", "Selitys"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton5.setText("Näytä data");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lisaanappi, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(poistanappi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tyhjennanappi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(paivitanappi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lisaanappi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(poistanappi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paivitanappi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tyhjennanappi))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String selectSql = "SELECT * FROM tapahtumataulu";
        ResultSet resultSet;
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0);
        
        try {
             Class.forName("org.hsqldb.jdbc.JDBCDriver");
            //Creating the connection with HSQLDB
            conn = DriverManager.getConnection("jdbc:hsqldb:hsql://10.60.202.80/testdb", "SA", "");
            stmt = conn.createStatement();
            resultSet = stmt.executeQuery(selectSql);
            //resultSet.getString("id");
            while (resultSet.next()) {
                System.out.println(resultSet.getInt("id") + resultSet.getString("tapahtumapvm") + resultSet.getString("selitys"));
                tableModel.addRow(new Object[] {resultSet.getInt("id"),resultSet.getString("tapahtumapvm"),resultSet.getString("selitys")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void lisaanappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaanappiActionPerformed
        String selectId = "SELECT id FROM tapahtumataulu";
        ResultSet resultSet;
        int selectedId = 0;
        try {
             Class.forName("org.hsqldb.jdbc.JDBCDriver");
            //Creating the connection with HSQLDB
            conn = DriverManager.getConnection("jdbc:hsqldb:hsql://10.60.202.80/testdb", "SA", "");
            stmt = conn.createStatement();
            resultSet = stmt.executeQuery(selectId);
            
            while (resultSet.next()) {
                System.out.println(resultSet.getString("id"));
                selectedId = Integer.parseInt(resultSet.getString("id"));    
            }
            //resultSet.getString("id");
        } catch (SQLException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        }
        int idValue = selectedId + 1;
            
        try {
             Class.forName("org.hsqldb.jdbc.JDBCDriver");
            //Creating the connection with HSQLDB
            conn = DriverManager.getConnection("jdbc:hsqldb:hsql://192.168.0.102/testdb", "SA", "");
            stmt = conn.createStatement();
            tableId = idValue; //kyseien id talteen mita asken kasiteltiin
            String insertSql = "INSERT INTO tapahtumataulu (id,tapahtumapvm,selitys) VALUES (" + idValue + ",'" + jTextField1.getText() + "','" +  jTextArea1.getText() + "')";
           System.out.println(insertSql);
            result = stmt.executeUpdate(insertSql);
            conn.commit(); 
        } catch (SQLException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lisaanappiActionPerformed

    private void poistanappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poistanappiActionPerformed
        String deleteSql = "DELETE FROM tapahtumataulu WHERE tapahtumapvm='" + jTextField1.getText() + "' AND selitys='" + jTextArea1.getText() + "'";
        try {
             Class.forName("org.hsqldb.jdbc.JDBCDriver");
            //Creating the connection with HSQLDB
            conn = DriverManager.getConnection("jdbc:hsqldb:hsql://muistaip/testdb", "SA", "");
            stmt = conn.createStatement();
            result = stmt.executeUpdate(deleteSql);
            jTextField1.setText("");
            jTextArea1.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_poistanappiActionPerformed

    private void paivitanappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paivitanappiActionPerformed
        String updateSql = "UPDATE tapahtumataulu SET tapahtumapvm='" + jTextField1.getText() + "', selitys='" + jTextArea1.getText() + "' WHERE id=" + tableId;
        try {
             Class.forName("org.hsqldb.jdbc.JDBCDriver");
            //Creating the connection with HSQLDB
            conn = DriverManager.getConnection("jdbc:hsqldb:hsql://muistaip/testdb", "SA", "");
            stmt = conn.createStatement();
            System.out.println(updateSql);
            result = 0;
            result = stmt.executeUpdate(updateSql);
        } catch (SQLException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dbjframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_paivitanappiActionPerformed

    private void tyhjennanappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tyhjennanappiActionPerformed
        jTextField1.setText("");
        jTextArea1.setText("");
        tableId = 0;
    }//GEN-LAST:event_tyhjennanappiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dbjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dbjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dbjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dbjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dbjframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton lisaanappi;
    private javax.swing.JButton paivitanappi;
    private javax.swing.JButton poistanappi;
    private javax.swing.JButton tyhjennanappi;
    // End of variables declaration//GEN-END:variables
}
